"""
Test profile update for session 27084 - –ê–Ω–Ω–∞ –ö–æ–≤–∞–ª–µ–≤–∞
"""

import asyncio
import httpx
import json
import sys
from datetime import datetime
from pathlib import Path

# Add parent directory to path to import config
sys.path.insert(0, str(Path(__file__).parent.parent))
from config import settings
from telegram_tl_helpers import make_update_profile_query, make_get_full_user_query

# Config
SESSION_ID = "27084"
API_BASE_URL = settings.telegram_api_base_url
API_TOKEN = settings.telegram_api_key


async def get_current_profile():
    """Get current profile info"""
    async with httpx.AsyncClient(timeout=60.0) as client:
        headers = {
            "Authorization": f"Bearer {API_TOKEN}",
            "Content-Type": "application/json"
        }
        
        url = f"{API_BASE_URL}/api/external/sessions/{SESSION_ID}/rpc/invoke"
        
        query = make_get_full_user_query()
        payload = {
            "params": {
                "query": query,
                "retries": 5,
                "timeout": 30
            }
        }
        
        try:
            response = await client.post(url, json=payload, headers=headers)
            result = response.json()
            
            if result.get("success"):
                full_user = result.get("result", {})
                users_list = full_user.get("users", [])
                if users_list:
                    user = users_list[0]
                    about = full_user.get("full_user", {}).get("about", "")
                    
                    return {
                        "first_name": user.get("first_name"),
                        "last_name": user.get("last_name"),
                        "about": about,
                        "phone": user.get("phone")
                    }
            return None
        except Exception as e:
            print(f"‚ùå Error getting profile: {str(e)}")
            return None


async def update_profile(first_name=None, last_name=None, bio=None):
    """Update profile"""
    async with httpx.AsyncClient(timeout=60.0) as client:
        headers = {
            "Authorization": f"Bearer {API_TOKEN}",
            "Content-Type": "application/json"
        }
        
        url = f"{API_BASE_URL}/api/external/sessions/{SESSION_ID}/rpc/invoke"
        
        query = make_update_profile_query(
            first_name=first_name,
            last_name=last_name,
            about=bio
        )
        
        payload = {
            "params": {
                "query": query,
                "retries": 5,
                "timeout": 30
            }
        }
        
        try:
            response = await client.post(url, json=payload, headers=headers)
            result = response.json()
            return result
        except Exception as e:
            return {"success": False, "error": str(e)}


async def main():
    timestamp = datetime.now().strftime("%H:%M:%S")
    
    print("="*70)
    print(f"üß™ TEST: Profile Update –¥–ª—è —Å–µ—Å—Å–∏–∏ {SESSION_ID} (–ê–Ω–Ω–∞ –ö–æ–≤–∞–ª–µ–≤–∞)")
    print(f"‚è∞ –í—Ä–µ–º—è: {timestamp}")
    print("="*70)
    
    # Step 1: Get current profile
    print("\nüìã –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å...")
    current = await get_current_profile()
    
    if current:
        print(f"‚úÖ –¢–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å:")
        print(f"   –ò–º—è: {current['first_name']} {current['last_name']}")
        print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {current['phone']}")
        print(f"   –ë–∏–æ: {current['about'][:80]}..." if current['about'] else "   –ë–∏–æ: (–ø—É—Å—Ç–æ)")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å")
        return
    
    # Step 2: Update name
    print("\nüîÑ –®–∞–≥ 2: –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –Ω–∞ '–ê–Ω–Ω–∞ –¢–ï–°–¢'...")
    result = await update_profile(
        first_name="–ê–Ω–Ω–∞ –¢–ï–°–¢",
        last_name="–ö–æ–≤–∞–ª–µ–≤–∞ TEST"
    )
    
    if result.get("success"):
        print(f"‚úÖ –ò–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        if result.get("result"):
            user = result["result"].get("_", "")
            print(f"   –û—Ç–≤–µ—Ç Telegram: {user}")
    else:
        error = result.get("error", "Unknown error")
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏: {error}")
        if "frozen" in error.lower():
            print("   ‚ö†Ô∏è –°–µ—Å—Å–∏—è –∑–∞–º–æ—Ä–æ–∂–µ–Ω–∞!")
            return
    
    await asyncio.sleep(3)
    
    # Step 3: Update bio
    print(f"\nüîÑ –®–∞–≥ 3: –û–±–Ω–æ–≤–ª—è–µ–º –±–∏–æ —Å —Ç–µ—Å—Ç–æ–≤–æ–π –º–µ—Ç–∫–æ–π {timestamp}...")
    test_bio = f"–î–∏–∑–∞–π–Ω–µ—Ä –ª–∞–Ω–¥—à–∞—Ñ—Ç–æ–≤ –∏–∑ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞. –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {timestamp} ‚úÖ"
    
    result = await update_profile(bio=test_bio)
    
    if result.get("success"):
        print(f"‚úÖ –ë–∏–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        error = result.get("error", "Unknown error")
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∏–æ: {error}")
    
    await asyncio.sleep(3)
    
    # Step 4: Verify changes
    print("\nüîç –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
    updated = await get_current_profile()
    
    if updated:
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å:")
        print(f"   –ò–º—è: {updated['first_name']} {updated['last_name']}")
        print(f"   –ë–∏–æ: {updated['about']}")
        
        # Compare
        print("\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ:")
        if updated['first_name'] != current['first_name']:
            print(f"   ‚úÖ –ò–º—è –∏–∑–º–µ–Ω–µ–Ω–æ: {current['first_name']} ‚Üí {updated['first_name']}")
        else:
            print(f"   ‚ö†Ô∏è –ò–º—è –ù–ï –∏–∑–º–µ–Ω–∏–ª–æ—Å—å: {current['first_name']}")
            
        if updated['last_name'] != current['last_name']:
            print(f"   ‚úÖ –§–∞–º–∏–ª–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞: {current['last_name']} ‚Üí {updated['last_name']}")
        else:
            print(f"   ‚ö†Ô∏è –§–∞–º–∏–ª–∏—è –ù–ï –∏–∑–º–µ–Ω–∏–ª–∞—Å—å: {current['last_name']}")
            
        if updated['about'] != current['about']:
            print(f"   ‚úÖ –ë–∏–æ –∏–∑–º–µ–Ω–µ–Ω–æ!")
            print(f"      –ë—ã–ª–æ: {current['about'][:50]}...")
            print(f"      –°—Ç–∞–ª–æ: {updated['about'][:50]}...")
        else:
            print(f"   ‚ö†Ô∏è –ë–∏–æ –ù–ï –∏–∑–º–µ–Ω–∏–ª–æ—Å—å")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å")
    
    print("\n" + "="*70)
    print("üèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("="*70)


if __name__ == "__main__":
    asyncio.run(main())

